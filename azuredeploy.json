{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "secondResourceGroupName": {
      "type": "string"
    },
    "firstVMName": {
      "type": "string",
      "minLength": 1
    },
    "secondVMName": {
      "type": "string"
    },
    "firstVMAdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "firstVMAdminPassword": {
      "type": "securestring"
    },
    "secondVMAdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "secondVMAdminPassword": {
      "type": "securestring"
    },
    "VMWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter",
        "Windows-Server-Technical-Preview"
      ]
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "variables": {
    "firstVNetPrefix": "10.0.0.0/16",
    "secondVNetPrefix": "192.168.0.0/16",
    "firstVNetSubnetName": "Subnet-1",
    "secondVNetSubnetName": "Subnet-1",
    "firstVNetSubnetPrefix": "10.0.0.0/24",
    "firstVNetGWSubnetPrefix": "10.0.1.0/24",
    "secondVNetSubnetPrefix": "192.168.0.0/24",
    "secondVNetGWSubnetPrefix": "192.168.1.0/24",
    "VMImagePublisher": "MicrosoftWindowsServer",
    "VMImageOffer": "WindowsServer",
    "VMSize": "Standard_D2_v2",
    "firstVMVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'firstVNet')]",
    "secondVMVnetID": "[resourceId(parameters('secondResourceGroupName'), 'Microsoft.Network/virtualNetworks', 'secondVNet')]",
    "firstVMSubnetRef": "[concat(variables('firstVMVnetID'), '/subnets/', variables('firstVNetSubnetName'))]",
    "firstGWSubnetRef": "[concat(variables('firstVMVnetID'), '/subnets/', 'GatewaySubnet')]",
    "secondVMSubnetRef": "[concat(variables('secondVMVnetID'), '/subnets/', variables('secondVNetSubnetName'))]",
    "secondGWSubnetRef": "[concat(variables('secondVMVnetID'), '/subnets/', 'GatewaySubnet')]",
    "firstVMNicName": "[concat(parameters('firstVMName'), '-NetworkInterface')]",
    "secondVMNicName": "[concat(parameters('secondVMName'), '-NetworkInterface')]",
    "firstPublicIPName": "firstPublicIP",
    "secondPublicIPName": "secondPublicIP",
    "configArchiveFolder": "DSC",
    "vm01configArchiveFileName": "vm01config.zip",
    "vm02configArchiveFileName": "vm02config.zip"
  },
  "resources": [
    {
      "name": "NSG-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-12-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowVNetInbound",
            "properties": {
              "access": "Allow",
              "description": "Allow inbound traffic from VNet",
              "sourceAddressPrefix": "VirtualNetwork",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "*",
              "protocol": "*",
              "direction": "Inbound",
              "priority": 100
            }
          },
          {
            "name": "BlockAllInbound",
            "properties": {
              "access": "Deny",
              "description": "Deny all inbound traffic",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "*",
              "protocol": "*",
              "direction": "Inbound",
              "priority": 101
            }
          }
        ]
      }
    },
    {
      "name": "GW-01",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "apiVersion": "2018-11-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('firstPublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'firstVNet')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "GWconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('firstGWSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('firstPublicIPName'))]"
              }
            }
          }
        ],
        "gatewayType": "Vpn",
        "vpnType": "RouteBased"
      }
    },
    {
      "name": "firstVNet",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-12-01",
      "dependsOn": [
        "NSG-01"
      ],
      "tags": {
        "displayName": "firstVNet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('firstVNetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('firstVNetSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('firstVNetSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Micorosft.Network/networkSecurityGroups', 'NSG-01')]"
              }
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('firstVNetGWSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('firstVMNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'firstVNet')]"
      ],
      "tags": {
        "displayName": "firstVMNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.4",
              "subnet": {
                "id": "[variables('firstVMSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('firstVMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2018-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('firstVMNicName'))]"
      ],
      "tags": {
        "displayName": "firstVM"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('VMSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('firstVMName')]",
          "adminUsername": "[parameters('firstVMAdminUsername')]",
          "adminPassword": "[parameters('firstVMAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('VMImagePublisher')]",
            "offer": "[variables('VMImageOffer')]",
            "sku": "[parameters('VMWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "firstVMOSDisk",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('firstVMNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2018-10-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('firstVMName'))]"
          ],
          "tags": {
            "displayName": "vm01config"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(parameters('_artifactsLocation'), '/', variables('configArchiveFolder'), '/', variables('vm01configArchiveFileName'))]",
                "script": "vm01config.ps1",
                "function": "Main"
              },
              "configurationArguments": {
                "nodeName": "[parameters('firstVMName')]"
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('firstPublicIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [],
      "tags": {
        "displayName": "firstPublicIP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "name": "nestedTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('secondResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "NSG-02",
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2018-12-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowVNetInbound",
                    "properties": {
                      "access": "Allow",
                      "description": "Allow inbound traffic from VNet",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRange": "*",
                      "protocol": "*",
                      "direction": "Inbound",
                      "priority": 100
                    }
                  },
                  {
                    "name": "BlockAllInbound",
                    "properties": {
                      "access": "Deny",
                      "description": "Deny all inbound traffic",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "*",
                      "protocol": "*",
                      "direction": "Inbound",
                      "priority": 101
                    }
                  }
                ]
              }
            },
            {
              "name": "GW-02",
              "type": "Microsoft.Network/virtualNetworkGateways",
              "apiVersion": "2018-11-01",
              "location": "[resourceGroup().location]",
              "dependsOn": [
                "[resourceId(parameters('secondResourceGroupName'), 'Microsoft.Network/publicIPAddresses', variables('secondPublicIPName'))]",
                "[resourceId(parameters('secondResourceGroupName'), 'Microsoft.Network/virtualNetworks', 'secondVNet')]"
              ],
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "GWconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[variables('secondGWSubnetRef')]"
                      },
                      "publicIPAddress": {
                        "id": "[resourceId(parameters('secondResourceGroupName'), 'Microsoft.Network/publicIPAddresses', variables('secondPublicIPName'))]"
                      }
                    }
                  }
                ],
                "gatewayType": "Vpn",
                "vpnType": "RouteBased"
              }
            },
            {
              "name": "secondVNet",
              "type": "Microsoft.Network/virtualNetworks",
              "location": "[resourceGroup().location]",
              "apiVersion": "2018-12-01",
              "dependsOn": [
                "[resourceId(parameters('secondResourceGroupName'), 'Microsoft.Network/networkSecurityGroups', 'NSG-02')]"
              ],
              "tags": {
                "displayName": "secondVNet"
              },
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('secondVNetPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('secondVNetSubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('secondVNetSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId(parameters('secondResourceGroupName'), 'Microsoft.Network/networkSecurityGroups', 'NSG-02')]"
                      }
                    }
                  },
                  {
                    "name": "GatewaySubnet",
                    "properties": {
                      "addressPrefix": "[variables('secondVNetGWSubnetPrefix')]"
                    }
                  }
                ]
              }
            },
            {
              "name": "[variables('secondVMNicName')]",
              "type": "Microsoft.Network/networkInterfaces",
              "location": "[resourceGroup().location]",
              "apiVersion": "2016-03-30",
              "dependsOn": [
                "[resourceId(parameters('secondResourceGroupName'), 'Microsoft.Network/virtualNetworks', 'secondVNet')]"
              ],
              "tags": {
                "displayName": "secondVMNic"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Static",
                      "privateIPAddress": "192.168.0.4",
                      "subnet": {
                        "id": "[variables('secondVMSubnetRef')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "name": "[parameters('secondVMName')]",
              "type": "Microsoft.Compute/virtualMachines",
              "location": "[resourceGroup().location]",
              "apiVersion": "2018-10-01",
              "dependsOn": [
                "[resourceId(parameters('secondResourceGroupName'), 'Microsoft.Network/networkInterfaces', variables('secondVMNicName'))]"
              ],
              "tags": {
                "displayName": "secondVM"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[variables('VMSize')]"
                },
                "osProfile": {
                  "computerName": "[parameters('secondVMName')]",
                  "adminUsername": "[parameters('secondVMAdminUsername')]",
                  "adminPassword": "[parameters('secondVMAdminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "[variables('VMImagePublisher')]",
                    "offer": "[variables('VMImageOffer')]",
                    "sku": "[parameters('VMWindowsOSVersion')]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "secondVMOSDisk",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId(parameters('secondResourceGroupName'), 'Microsoft.Network/networkInterfaces', variables('secondVMNicName'))]"
                    }
                  ]
                }
              },
              "resources": [
                {
                  "name": "Microsoft.Powershell.DSC",
                  "type": "extensions",
                  "location": "[resourceGroup().location]",
                  "apiVersion": "2018-10-01",
                  "dependsOn": [
                    "[resourceId(parameters('secondResourceGroupName'), 'Microsoft.Compute/virtualMachines', parameters('secondVMName'))]"
                  ],
                  "tags": {
                    "displayName": "vm02config"
                  },
                  "properties": {
                    "publisher": "Microsoft.Powershell",
                    "type": "DSC",
                    "typeHandlerVersion": "2.9",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                      "configuration": {
                        "url": "[concat(parameters('_artifactsLocation'), '/', variables('configArchiveFolder'), '/', variables('vm02configArchiveFileName'))]",
                        "script": "vm02config.ps1",
                        "function": "Main"
                      },
                      "configurationArguments": {
                        "nodeName": "[parameters('secondVMName')]"
                      }
                    },
                    "protectedSettings": {
                      "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
                    }
                  }
                }
              ]
            },
            {
              "name": "[variables('secondPublicIPName')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "location": "[resourceGroup().location]",
              "apiVersion": "2016-03-30",
              "dependsOn": [],
              "tags": {
                "displayName": "secondPublicIP"
              },
              "properties": {
                "publicIPAllocationMethod": "Dynamic"
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {}
}
